version: '3.8'

services:
  web:
    image: kryonix-plataforma:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 15s
      labels:
        # Traefik básico
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"

        # Configuração do serviço web
        - "traefik.http.services.kryonix-web.loadbalancer.server.port=8080"

        # WEBHOOK - PRIORIDADE MÁXIMA (10000)
        - "traefik.http.routers.kryonix-webhook.rule=Host(`kryonix.com.br`) && Path(`/api/github-webhook`)"
        - "traefik.http.routers.kryonix-webhook.entrypoints=web,websecure"
        - "traefik.http.routers.kryonix-webhook.service=kryonix-web"
        - "traefik.http.routers.kryonix-webhook.priority=10000"
        - "traefik.http.routers.kryonix-webhook.tls=true"
        - "traefik.http.routers.kryonix-webhook.tls.certresolver=letsencryptresolver"

        # API Routes - Alta Prioridade (9000)
        - "traefik.http.routers.kryonix-api.rule=Host(`kryonix.com.br`) && PathPrefix(`/api/`)"
        - "traefik.http.routers.kryonix-api.entrypoints=web,websecure"
        - "traefik.http.routers.kryonix-api.service=kryonix-web"
        - "traefik.http.routers.kryonix-api.priority=9000"
        - "traefik.http.routers.kryonix-api.tls=true"
        - "traefik.http.routers.kryonix-api.tls.certresolver=letsencryptresolver"

        # HTTPS Principal - Prioridade Normal (100)
        - "traefik.http.routers.kryonix-https.rule=Host(`kryonix.com.br`) || Host(`www.kryonix.com.br`)"
        - "traefik.http.routers.kryonix-https.entrypoints=websecure"
        - "traefik.http.routers.kryonix-https.service=kryonix-web"
        - "traefik.http.routers.kryonix-https.priority=100"
        - "traefik.http.routers.kryonix-https.tls=true"
        - "traefik.http.routers.kryonix-https.tls.certresolver=letsencryptresolver"

        # HTTP - Redirecionamento (50)
        - "traefik.http.routers.kryonix-http.rule=Host(`kryonix.com.br`) || Host(`www.kryonix.com.br`)"
        - "traefik.http.routers.kryonix-http.entrypoints=web"
        - "traefik.http.routers.kryonix-http.service=kryonix-web"
        - "traefik.http.routers.kryonix-http.priority=50"
        - "traefik.http.routers.kryonix-http.middlewares=https-redirect"

        # Middleware HTTPS Redirect
        - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
        - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"

        # Middleware de Segurança para API
        - "traefik.http.middlewares.api-security.headers.customrequestheaders.X-Forwarded-Proto=https"
        - "traefik.http.middlewares.api-security.headers.customresponseheaders.X-Frame-Options=SAMEORIGIN"
        - "traefik.http.routers.kryonix-webhook.middlewares=api-security"
        - "traefik.http.routers.kryonix-api.middlewares=api-security"

    networks:
      - traefik-public
    # Removido ports - desnecessário no Docker Swarm com Traefik
    environment:
      - NODE_ENV=production
      - PORT=8080
      - AUTO_UPDATE_DEPS=true
      - WEBHOOK_SECRET=Kr7$$n0x-V1t0r-2025-#Jwt$$3cr3t-P0w3rfu1-K3y-A9b2Cd8eF4g6H1j5K9m3N7p2Q5t8
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 120s  # Mais tempo para Next.js inicializar
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  webhook:
    image: kryonix-plataforma:latest
    command: ["node", "webhook-listener.js"]
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 15s
    networks:
      - traefik-public
    # Removido ports - desnecessário no Docker Swarm
    environment:
      - NODE_ENV=production
      - PORT=8082
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 45s
      timeout: 15s
      retries: 3
      start_period: 90s

  monitor:
    image: kryonix-plataforma:latest
    command: ["node", "kryonix-monitor.js"]
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 15s
    networks:
      - traefik-public
    # Removido ports - desnecessário no Docker Swarm
    environment:
      - NODE_ENV=production
      - PORT=8084
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/health"]
      interval: 45s
      timeout: 15s
      retries: 3
      start_period: 90s

networks:
  traefik-public:
    external: true