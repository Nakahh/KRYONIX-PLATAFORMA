{
  "name": "kryonix-plataforma",
  "version": "1.0.0",
  "description": "Plataforma SaaS KRYONIX - 100% Autônoma por IA",
  "main": "server.js",
  "scripts": {
    "dev": "npx next dev -p 3000",
    "build": "NODE_OPTIONS='--max-old-space-size=8192' next build",
    "build-fast": "NODE_OPTIONS='--max-old-space-size=4096' NEXT_TELEMETRY_DISABLED=1 NODE_ENV=production next build",
    "build-ultra-fast": "node build-ultra-fast.js",
    "build-docker": "node build-ultra-fast.js",
    "build-emergency": "echo 'Emergency build mode' && npm run build-fast",
    "fix-typescript": "node fix-typescript-build.js",
    "start": "node server.js",
    "production": "NODE_ENV=production node server.js",
    "webhook": "node webhook-listener.js",
    "monitor": "node kryonix-monitor.js",
    "lint": "next lint",
    "check-deps": "node check-dependencies.js",
    "check-deps-inline": "node -e \"console.log('🔍 KRYONIX - Verificando dependências críticas...'); const deps = ['next', 'react', 'react-dom', 'express', 'cors', 'helmet', 'body-parser', 'morgan']; let missing = []; deps.forEach(dep => { try { require(dep); console.log('✅ ' + dep + ': OK'); } catch(e) { console.error('❌ ' + dep + ': FALTANDO'); missing.push(dep); } }); if (missing.length === 0) { console.log('🎉 Todas as dependências críticas instaladas!'); } else { console.error('❌ Dependências faltando: ' + missing.join(', ')); process.exit(1); }\"",
    "validate-install": "node validate-dependencies.js",
    "validate-install-inline": "node -e \"const fs = require('fs'); const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8')); const deps = Object.keys(pkg.dependencies); console.log('���� Validando ' + deps.length + ' dependências...'); let installed = 0; deps.forEach(dep => { try { require.resolve(dep); installed++; } catch(e) { console.error('❌ Falta: ' + dep); } }); console.log('✅ Instaladas: ' + installed + '/' + deps.length); if (installed !== deps.length) process.exit(1);\"",
    "preinstall": "node -e \"console.log('🚀 KRYONIX - Preparando instalação...'); console.log('Node.js:', process.version); console.log('npm:', process.env.npm_version || 'unknown'); console.log('Platform:', process.platform); console.log('✅ Ambiente validado');\"",
    "postinstall": "node -e \"try { require('./check-dependencies.js'); } catch(e) { console.log('⚠️ check-dependencies.js não encontrado, pulando verificação durante build'); }\"",
    "prestart": "npm run check-deps",
    "optimize": "node optimize-deps.js",
    "fast-setup": "npm run optimize && npm run build-ultra-fast",
    "hash-password": "node scripts/hash-password.js",
    "generate-secret": "node -e \"console.log('JWT_SECRET=' + require('crypto').randomBytes(32).toString('hex'));\"",
    "validate-env": "node -e \"const required = ['JWT_SECRET', 'WEBHOOK_SECRET']; const missing = required.filter(key => !process.env[key]); if (missing.length) { console.error('\u274c Vari\u00e1veis faltando:', missing.join(', ')); process.exit(1); } else { console.log('\u2705 Todas as vari\u00e1veis cr\u00edticas configuradas'); }\"",
    "security-check": "npm run validate-env && node -e \"console.log('\ud83d\udd12 Verifica\u00e7\u00e3o de seguran\u00e7a: OK');\"",
    "setup-env": "echo 'Copiando .env.example para .env...' && cp .env.example .env && echo '\u2705 Configure as vari\u00e1veis em .env'"
  },
  "dependencies": {
    "@formatjs/intl-localematcher": "^0.6.1",
    "@tailwindcss/forms": "0.5.10",
    "autoprefixer": "^10.0.1",
    "aws-sdk": "2.1467.0",
    "axios": "1.6.2",
    "bcryptjs": "2.4.3",
    "body-parser": "1.20.2",
    "clsx": "2.1.1",
    "cors": "2.8.5",
    "dotenv": "16.3.1",
    "express": "4.18.2",
    "express-rate-limit": "^7.1.5",
    "helmet": "7.1.0",
    "ioredis": "5.3.2",
    "jsonwebtoken": "9.0.2",
    "jspdf": "^3.0.1",
    "jspdf-autotable": "^5.0.2",
    "lucide-react": "0.427.0",
    "morgan": "1.10.0",
    "multer": "1.4.5-lts.1",
    "negotiator": "^1.0.0",
    "next": "14.2.3",
    "next-intl": "^3.19.4",
    "node-cron": "3.0.3",
    "pg": "8.11.3",
    "postcss": "^8",
    "react": "18.3.1",
    "react-dom": "18.3.1",
    "socket.io": "4.7.4",
    "tailwindcss": "^3.4.0",
    "ws": "8.14.2"
  },
  "devDependencies": {
    "@types/bcryptjs": "^2.4.6",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/morgan": "^1.9.9",
    "@types/multer": "^1.4.11",
    "@types/negotiator": "^0.6.4",
    "@types/node": "^20",
    "@types/pg": "^8.10.9",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "@types/ws": "^8.5.10",
    "eslint": "^8",
    "eslint-config-next": "^14.2.3",
    "typescript": "^5"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "engineStrict": false,
  "repository": {
    "type": "git",
    "url": "https://github.com/nakahh/kryonix-plataforma.git"
  },
  "keywords": [
    "saas",
    "kryonix",
    "ai",
    "automation",
    "platform",
    "whatsapp",
    "mobile-first"
  ],
  "author": "KRYONIX Team",
  "license": "MIT"
}
