#!/bin/bash

echo "üîç DIAGN√ìSTICO KRYONIX PLATFORM"
echo "================================"
echo

echo "üìä Status Docker Swarm:"
docker info | grep -E "Swarm|Node" || echo "‚ùå Docker Swarm n√£o ativo"
echo

echo "üì¶ Servi√ßos Docker:"
docker service ls | grep -i kryonix || echo "‚ùå Nenhum servi√ßo KRYONIX encontrado"
echo

echo "üê≥ Containers:"
docker ps | grep -i kryonix || echo "‚ùå Nenhum container KRYONIX rodando"
echo

echo "üåê Teste de conectividade local:"
if curl -f -s http://localhost:8080/health > /dev/null; then
    echo "‚úÖ localhost:8080 - FUNCIONANDO"
    curl -s http://localhost:8080/health | jq '.' 2>/dev/null || curl -s http://localhost:8080/health
else
    echo "‚ùå localhost:8080 - N√ÉO RESPONDE"
fi
echo

echo "üîó Teste webhook local:"
if curl -f -s -X POST http://localhost:8080/api/github-webhook \
   -H "Content-Type: application/json" \
   -d '{"ref":"test","repository":{"name":"test"}}' > /dev/null; then
    echo "‚úÖ Webhook local - FUNCIONANDO"
else
    echo "‚ùå Webhook local - N√ÉO RESPONDE"
fi
echo

echo "üåç Teste de conectividade externa:"
if curl -f -s https://kryonix.com.br/health > /dev/null; then
    echo "‚úÖ https://kryonix.com.br - FUNCIONANDO"
else
    echo "‚ùå https://kryonix.com.br - N√ÉO RESPONDE"
fi
echo

echo "üìÅ Arquivos do projeto:"
cd /opt/kryonix-plataform 2>/dev/null || cd /opt/kryonix-platform 2>/dev/null || {
    echo "‚ùå Diret√≥rio do projeto n√£o encontrado"
    exit 1
}

for file in server.js package.json docker-stack.yml Dockerfile webhook-deploy.sh; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file"
    else
        echo "‚ùå $file - FALTANDO"
    fi
done
echo

echo "üìã Logs recentes:"
if [ -f "/var/log/kryonix-deploy.log" ]; then
    echo "√öltimas 5 linhas do log:"
    tail -5 /var/log/kryonix-deploy.log
else
    echo "‚ùå Log do sistema n√£o encontrado"
fi
echo

echo "üéØ RECOMENDA√á√ïES:"
if ! docker service ls | grep -q "Kryonix"; then
    echo "1. Execute: ./instalador-plataforma-kryonix.sh"
    echo "2. Ou: docker stack deploy -c docker-stack.yml Kryonix"
fi
echo "3. Para logs: docker service logs Kryonix_web"
echo "4. Para reiniciar: docker service update --force Kryonix_web"
